plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
}

repositories {
    mavenCentral()
}

subprojects {
    group = 'com.sixheroes'
    version = '0.0.1-SNAPSHOT'

    java {
        sourceCompatibility = '17'
    }

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'jacoco'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    test {
        finalizedBy 'jacocoTestReport'
    }

    jacocoTestReport {
        dependsOn test

        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect {
                fileTree(dir: it, excludes: [
                        "**/Q*",
                        "**/*Request.class", // request 폴더 제외 안ㅓㅁ
                        "**/*Response*",
                        "**/*Dto*",
                        "**/config/*",
                        "**/global/*"
                ])
            }))
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    tasks.register("prepareKotlinBuildScriptModel") {}
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

bootJar.enabled = false

tasks.named('test') {
    useJUnitPlatform()
}
